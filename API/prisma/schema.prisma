generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CLIENT
  DOCTOR
}

enum Analyze_Jornul_Type {
  ACTIV
  RETRO
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  password      String
  role          Role          @default(CLIENT)
  createdAt     DateTime      @default(now())
  personalData  Personal_Data?
  files         FileS3[]
  medicamentatie Medicamentatie[] @relation("UserMedicamentatie")

}

model Personal_Data {
  id          Int    @id @default(autoincrement())
  cnp         String @db.VarChar(13) @unique
  firstName   String @db.VarChar(40)
  lastName    String @db.VarChar(40)
  address     String @db.VarChar(200)
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  userId      Int     @unique
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Informatii_Categorie_Boala{  
  id          Int    @id @default(autoincrement())  
  name        String @db.VarChar(50) @unique
  description String @db.Text
  content     String @db.Text
  imageId     Int?   @unique
  image       FileS3?  @relation(fields: [imageId], references: [id]) 
}

model FileS3 {
  id           Int      @id @default(autoincrement())
  name         String   
  uploaderId   Int      
  uploadedAt   DateTime @default(now()) 
  isDeleted    Boolean  @default(false) 
  description  String?  
  mimeType     String
  uploader     User     @relation(fields: [uploaderId], references: [id])
  informatii   Informatii_Categorie_Boala? @relation

}

model Medicamente {
  id            Int            @id @default(autoincrement())
  name          String         @db.Text @unique
  description   String         @db.Text
  medicamentatie Medicamentatie[] @relation("MedicamenteMedicamentatie")
}

model Medicamentatie {
  id            Int          @id @default(autoincrement())
  name          String       @db.VarChar(64)
  startDate     DateTime     @db.Timestamp()
  endDate       DateTime     @db.Timestamp()    
  medicamentId  Int
  medicament    Medicamente   @relation("MedicamenteMedicamentatie", fields: [medicamentId], references: [id])
  quantity      Int 
  userId        Int
  user          User         @relation("UserMedicamentatie", fields: [userId], references: [id], onDelete: Cascade) 
  createdAt     DateTime     @default(now()) 
  updatedAt     DateTime     @updatedAt      

  @@unique([name, userId]) 

}


